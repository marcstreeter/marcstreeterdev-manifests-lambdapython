# Tiltfile

# checks
allow_k8s_contexts('docker-desktop')

# extensions
load('ext://dotenv', 'dotenv')

# environment variables
DOTENV = dotenv() or {}

# Define the Docker image for the Lambda service
docker_build(
  'lambda',
  '.',
  dockerfile='Dockerfile',
  # entrypoint=["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "main"],
  live_update=[
    sync('./src', '/var/task/src'),
  ]
)

# Define the interface service using nginx image
docker_build(
  '{{ project_kebab }}-interface',
  '.',
  dockerfile='interface/Dockerfile',
  live_update=[
    sync('interface/index.html', '/usr/share/nginx/html/index.html'),
    sync('interface/openapi.yaml', '/usr/share/nginx/html/openapi.yaml'),
    sync('interface/nginx.conf', '/etc/nginx/nginx.conf'),
  ]
)

# Use Helm to deploy the Lambda service
k8s_yaml(
  helm(
      'manifests',
      namespace='default',
      values=[
          'manifests/values.yaml'
      ],
      set=[
          'project_name={{ project_kebab }}',
          'environment=development'
      ]
  )
)
# Forward the container port 80 to the host port 18085
k8s_resource('{{ project_kebab }}-interface', port_forwards='18085:80')
k8s_resource(
    workload='{{ project_chart }}',
    port_forwards=[
        '{{ tilt_interface_port }}:{{ interface_port }}',  # HTTP port
        # "18089:5678" # DebugPy port
    ],
    # resource_deps=['{{ project_chart }}']
)